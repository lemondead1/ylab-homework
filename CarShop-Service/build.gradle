plugins {
    id 'application'
    id 'io.freefair.lombok' version '8.6'
    id 'io.freefair.aspectj.post-compile-weaving' version '8.6'
}

group = 'com.lemondead1.carshopservice'

application {
    mainClass = "com.lemondead1.carshopservice.CarShopServiceApplication"
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.0'

    implementation 'org.mapstruct:mapstruct:1.6.0'
    implementation 'org.liquibase:liquibase-core:4.29.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.17.2'
    implementation 'org.aspectj:aspectjrt:1.9.22'
    implementation 'org.aspectj:aspectjweaver:1.9.22'
    implementation 'org.slf4j:slf4j-api:2.0.16'
    implementation 'ch.qos.logback:logback-classic:1.5.6'

    implementation "org.eclipse.jetty:jetty-server:${jetty_version}"
    implementation "org.eclipse.jetty.ee10:jetty-ee10-servlet:${jetty_version}"
    implementation "org.eclipse.jetty.ee10:jetty-ee10-webapp:${jetty_version}"

    runtimeOnly 'org.postgresql:postgresql:42.7.3'

    compileOnly 'com.github.spotbugs:spotbugs-annotations:4.8.6'

    testImplementation platform('org.junit:junit-bom:5.10.3')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.mockito:mockito-core:5.12.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.12.0'
    testImplementation 'org.assertj:assertj-core:3.26.3'
    testImplementation 'org.testcontainers:testcontainers:1.20.1'
    testImplementation 'org.testcontainers:postgresql:1.20.1'
}

jar {
    manifest.attributes('Main-Class': application.mainClass)

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy DuplicatesStrategy.WARN
}

test {
    useJUnitPlatform()
    environment("TESTCONTAINERS_REUSE_ENABLE", "true")
}

tasks.register('buildDockerImage', Exec) {
    doFirst {
        mkdir "${layout.buildDirectory.get()}/docker"
    }

    dependsOn jar

    workingDir = "${projectDir}"
    commandLine "docker", "build", "-t=carshop-service", "--build-arg=JAR_PATH=build/libs/CarShop-Service.jar", "."
}

build {
    dependsOn buildDockerImage
}